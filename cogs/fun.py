import random
import discord
import requests

from discord.ext import commands
from bs4 import BeautifulSoup as bs


class Fun(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    # noinspection PyUnresolvedReferences
    class JankenButtons(discord.ui.View):
        def __init__(self, embed):
            super().__init__()
            self.__answers = ['–ö–∞–º–µ–Ω—å', '–ù–æ–∂–Ω–∏—Ü—ã', '–ë—É–º–∞–≥–∞']
            self.__user_choice = None
            self.__embed = embed

        async def __edit_message(self, interaction):
            answer = random.choice(self.__answers)
            victory = None

            if self.__user_choice == '–ö–∞–º–µ–Ω—å' and answer == '–ù–æ–∂–Ω–∏—Ü—ã':
                victory = True

            elif self.__user_choice == '–ù–æ–∂–Ω–∏—Ü—ã' and answer == '–ë—É–º–∞–≥–∞':
                victory = True

            elif self.__user_choice == '–ë—É–º–∞–≥–∞' and answer == '–ö–∞–º–µ–Ω—å':
                victory = True

            elif self.__user_choice is answer:
                victory = None

            else:
                victory = False

            if victory:
                await interaction.response.edit_message(content=None,
                                                        view=None,
                                                        embed=discord.Embed(
                                                            color=self.__embed.color,
                                                            title=self.__embed.title,
                                                            description=f"{self.__embed.description} \n"
                                                                        f"–¢—ã –≤—ã–±—Ä–∞–ª `{self.__user_choice}`, –∞ —è –≤—ã–±—Ä–∞–ª `{answer}` \n"
                                                                        "–í–ø–µ—Ä–≤—ã–µ –≤ —Å–≤–æ–µ–π –∂–∏–∑–Ω–∏ —Ç—ã –ø–æ–±–µ–¥–∏–ª... –£–†–ê–ê–ê–ê!!!!11!1! üéâü•≥ü•≥"))
            elif not victory and victory is not None:
                await interaction.response.edit_message(content=None,
                                                        view=None,
                                                        embed=discord.Embed(
                                                            color=self.__embed.color,
                                                            title=self.__embed.title,
                                                            description=f"{self.__embed.description} \n"
                                                                        f"–¢—ã –≤—ã–±—Ä–∞–ª `{self.__user_choice}`, –∞ —è –≤—ã–±—Ä–∞–ª `{answer}` \n"
                                                                        "–ù—É –¥–∞. –¢—ã –ø—Ä–æ—Å—Ä–∞–ª, –∫–∞–∫ –≤—Å–µ–≥–¥–∞, –ê–•–ê–ê–ê–•–ê–•–•–ê–ê–ó–ó–ê–ó–ê ü§™ü§£"))

            else:
                await interaction.response.edit_message(content=None,
                                                        view=None,
                                                        embed=discord.Embed(
                                                            color=self.__embed.color,
                                                            title=self.__embed.title,
                                                            description=f"{self.__embed.description} \n"
                                                                        f"–¢—ã –≤—ã–±—Ä–∞–ª `{self.__user_choice}`, –∞ —è –≤—ã–±—Ä–∞–ª `{answer}` \n"
                                                                        "–ù–∏—á—å—è, —ë–ø—Ç–∞. –ì–æ –µ—â—ë —Ä–∞–∑, –ø—Ä–∏–¥—É—Ä–æ–∫ –º–∞–ª–æ–ª–µ—Ç–Ω–∏–π! üòê"))

        @discord.ui.button(label="–ö–∞–º–µ–Ω—å", emoji="üóø", style=discord.ButtonStyle.blurple)
        async def rock_button(self, interaction: discord.Interaction, button: discord.ui.Button):
            self.__user_choice = "–ö–∞–º–µ–Ω—å"
            await self.__edit_message(interaction)

        @discord.ui.button(label="–ù–æ–∂–Ω–∏—Ü—ã", emoji="‚úÇÔ∏è", style=discord.ButtonStyle.red)
        async def scissors_button(self, interaction: discord.Interaction, button: discord.ui.Button):
            self.__user_choice = "–ù–æ–∂–Ω–∏—Ü—ã"
            await self.__edit_message(interaction)

        @discord.ui.button(label="–ë—É–º–∞–≥–∞", emoji="üìÑ", style=discord.ButtonStyle.gray)
        async def paper_button(self, interaction: discord.Interaction, button: discord.ui.Button):
            self.__user_choice = "–ë—É–º–∞–≥–∞"
            await self.__edit_message(interaction)

    @commands.command(aliases=['rps', 'rockpaperscissors'])
    async def janken(self, ctx):
        """–ö–∞–º–µ–Ω—å –Ω–æ–∂–Ω–∏—Ü—ã –±—É–º–∞–≥–∞! –™–£–™ –ë–ª—è–¥!"""
        description = '–°—ã–≥—Ä–∞–π —Å–æ –º–Ω–æ–π –≤ –∫–∞–º–µ–Ω—å –Ω–æ–∂–Ω–∏—Ü—ã –±—É–º–∞–≥—É! –≤—ã–±–µ—Ä–∏ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –Ω–∏–∂–µ:'
        embed = discord.Embed(color=0xffcd4c, title=f'{ctx.message.author}: –ö–∞–º–µ–Ω—å –ù–æ–∂–Ω–∏—Ü—ã –ë—É–º–∞–≥–∞',
                              description=description)
        await ctx.send(embed=embed, view=self.JankenButtons(embed=embed))

    @commands.command()
    async def slots(self, ctx):
        """–ê–∑–∏–Ω–æ —Ç—Ä–∏ —Ç–æ–ø–æ—Ä–∞ –∫–æ—Ä–æ—á–µ"""
        author_id = str(ctx.author.id)

        symbols = ['üçí', 'üîî', '7Ô∏è‚É£', 'üëë', '‚ò†Ô∏è']

        slot = [0, 1, 2]

        for i in range(3):
            slot[i] = symbols[random.randint(0, 3)]

        is_same = True if slot[0] == slot[1] == slot[2] else False

        if is_same and symbols[4] in slot:
            footer = '–õ—É–∑–µ—Ä! –í–∞—à –±–∞–ª–∞–Ω—Å –æ–±–Ω—É–ª—ë–Ω'
        elif is_same and symbols[3] in slot:
            footer = '+ 5 000 –±–∞–∫—Å–æ–≤ –Ω–∞ –≤–∞—à —Å—á—ë—Ç'
        elif is_same and symbols[2] in slot:
            footer = '+ 10 000 –±–∞–∫—Å–æ–≤ –Ω–∞ –≤–∞—à —Å—á—ë—Ç'
        elif is_same and symbols[1] in slot:
            footer = '+ 15 000 –±–∞–∫—Å–æ–≤ –Ω–∞ –≤–∞—à —Å—á—ë—Ç'
        elif is_same and symbols[0] in slot:
            footer = '–î–ñ–ï–ö–ü–û–¢!!! + 1 000 000 –±–∞–∫—Å–æ–≤ –Ω–∞ –≤–∞—à —Å—á—ë—Ç'
        elif symbols[0] == slot[0] == slot[1] or slot[0] == slot[2] == symbols[0] or slot[1] == slot[2] == symbols[0]:
            footer = '+ 3 500 –±–∞–∫—Å–æ–≤ –Ω–∞ –≤–∞—à —Å—á—ë—Ç'
        elif symbols[0] in slot:
            footer = '+ 1 500 –±–∞–∫—Å–æ–≤ –Ω–∞ –≤–∞—à —Å—á—ë—Ç'
        else:
            footer = '–ù–∏—á–µ–≥–æ('
        embed = discord.Embed(color=0x36c600, title='üé∞ Slots Azino777',
                              description=str(slot[0]) + str(slot[1]) + str(slot[2]))
        embed.set_footer(text=footer, icon_url="https://i.imgur.com/uZIlRnK.png")
        await ctx.send(embed=embed)

    @commands.command(aliases=["anekdot"])
    async def joke(self, ctx):
        """–ü–∞—Ä—Å–∏—Ç –∞–Ω–µ–∫–¥–æ—Ç –∏–∑ —Å–∞–π—Ç–∞, –∏ –¥–µ–ª–∏—Ç—Å—è –∏–º —Å —Ç–æ–±–æ–π, –∏–±–æ —Ç—ã –¥–∞—É–Ω, –Ω–µ –º–æ–∂–µ—à—å —Å–∞–º –µ–≥–æ –∑–∞–≥—É–≥–ª–∏—Ç—å"""
        joke_website = "https://baneks.ru/"
        joke_number = str(random.randint(1, 1142))

        joke_url = joke_website + joke_number
        request = requests.get(joke_url)
        soup = bs(request.text, "html.parser")

        parsed = soup.find_all("article")
        for jokes in parsed:
            embed = discord.Embed(color=0x33bbff, title=f"üìã –ê–Ω–µ–∫–¥–æ—Ç #{joke_number}",
                                  description=jokes.p.text)
            embed.set_footer(text="–≠—Ç–æ—Ç –¥–∞—É–Ω—Å–∫–∏–π –∞–Ω–µ–∫ –≤–∑—è—Ç (*—Å–∫–æ–º—É–Ω–∏–∑–∂–µ–Ω) –∏–∑ https://baneks.ru/")
            message = await ctx.send(embed=embed)

            emojis = ['ü§£', 'üòê', 'üí©']
            for emoji in emojis:
                await message.add_reaction(emoji)


async def setup(bot):
    await bot.add_cog(Fun(bot))
