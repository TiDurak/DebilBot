import asyncio
import datetime
import discord
from discord.ext import commands
from yt_dlp import YoutubeDL, utils
from config import settings

YDL_OPTIONS = {'format': 'bestaudio', 'noplaylist': 'True', 'quiet': True}
FFMPEG_OPTIONS = {'before_options': '-reconnect 1 -reconnect_streamed 1 -reconnect_delay_max 5', 'options': '-vn'}


class Queue:
    def __init__(self):
        self.__vc = None
        self.__queue = []
        self.__playing_now = None

    def add_track(self, title):
        self.__queue.append(title)

    def play_next(self):
        if len(self.__queue) > 0:
            next_track = self.__queue.pop(0)
            self.__playing_now = next_track
            return next_track
        else:
            return 0

    def get_playing_now(self):
        print(self.__playing_now)
        return self.__playing_now

    def set_playing_now(self, track):
        self.__playing_now = track

    def clear(self):
        self.__queue = []
        self.__playing_now = None

    def is_empty(self):
        if len(self.__queue):
            return False
        else:
            return True

    def length(self):
        return len(self.__queue)

    def get_by_id(self, id):
        return self.__queue[id]


class Music(commands.Cog):
    def __init__(self, bot, intents):
        self.bot = bot
        self.__client = discord.Client(intents=intents)
        self.__queue = Queue()

    async def __connect(self, ctx):
        try:
            if not ctx.message.author.voice:
                await ctx.send('‚ùå **–õ–û–• –¢–£–ü–û–ô!** –°–Ω–∞—á–∞–ª–∞ –ø–æ–¥–∫–ª—é—á–∏—Å—å –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É —á–∞—Ç—É, –∞ –ø–æ—Ç–æ–º –º–Ω–µ –º–æ–∑–≥–∏ !@?%#&')
                return

            voice_channel = ctx.message.author.voice.channel
            self.__vc = await voice_channel.connect()
        except:
            pass

    def __extract(self, arg):
        video = None
        with YoutubeDL(YDL_OPTIONS) as ydl:
            # noinspection PyExceptClausesOrder
            try:
                video = ydl.extract_info(f"ytsearch:{arg}", download=False)['entries'][0]
                return video
            except utils.DownloadError:  # If not found video by basic searching
                video = ydl.extract_info(arg, download=False)
                return video
            except utils.DownloadError:  # If url was not found
                raise IndexError()

    def __get_url(self, extracted):
        with YoutubeDL(YDL_OPTIONS) as ydl:
            url = extracted['url']
            return url

    # noinspection PyUnresolvedReferences
    class PlayerButtons(discord.ui.View):
        def __init__(self, voice_chat, context, leave, stop, pause, resume, skip):
            super().__init__()
            self.__vc = voice_chat
            self.__ctx = context
            self.__leave = leave
            self.__stop = stop
            self.__pause = pause
            self.__resume = resume
            self.__skip = skip

        @discord.ui.button(style=discord.ButtonStyle.red, label='–í—ã—Ö–æ–¥', emoji='üö™')
        async def button_leave(self, interaction: discord.Interaction, button: discord.ui.Button):
            await interaction.response.send_message("–•–æ—Ä–æ—à–æ –±–ª–∏–Ω, —É—Ö–æ–∂—É, —Ç—É–ø–æ–π —Ç—ã –¥–µ–±–∏–ª", tts=True, delete_after=8)
            self.__leave(self.__ctx)

        @discord.ui.button(style=discord.ButtonStyle.red, label='–°—Ç–æ–ø', emoji='üõë')
        async def button_stop(self, interaction: discord.Interaction, button: discord.ui.Button):
            await interaction.response.send_message("–•–æ—Ä–æ—à–æ, —Ç–æ—Ä–º–æ–∑–Ω—É–ª", tts=True, delete_after=8)
            self.__stop(self.__ctx)

        @discord.ui.button(style=discord.ButtonStyle.blurple, label='–ü–∞—É–∑–∞ / –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å', emoji='‚èØÔ∏è')
        async def button_pause_resume(self, interaction: discord.Interaction, button: discord.ui.Button):
            if self.__vc.is_playing():
                await interaction.response.send_message("–£—Å—ë, —É—Å—ë, –ø–∞—É–∑–∞", tts=True, delete_after=8)
                self.__vc.pause()
            elif self.__vc.is_paused():
                await interaction.response.send_message("–ò–≥—Ä–∞–µ–º –¥–∞–ª—å—à–µ, –∑–Ω–∞—á–∏—Ç. –¢—ã –∑–∞–¥–æ–ª–±–∞–ª", tts=True, delete_after=8)
                self.__vc.resume()

        @discord.ui.button(style=discord.ButtonStyle.blurple, label='–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å', emoji='‚è≠Ô∏è')
        async def button_skip(self, interaction: discord.Interaction, button: discord.ui.Button):
            await interaction.response.send_message("–≠—Ç—É –ø–µ—Å–Ω—é –º—ã –ø–æ–ø—É—Å–∫–∞–µ–º, –ø–æ—Ç–æ–º—É —á—Ç–æ –≥–∏–≤–Ω–æ", tts=True,
                                                    delete_after=8)
            self.__skip(self.__ctx)

    async def __play(self, context, url, video):
        self.__vc.play(discord.FFmpegPCMAudio(executable=settings['path_to_ffmpeg'], source=url, **FFMPEG_OPTIONS),
                       after=lambda e: self.__skip(context=context))
        duration = video.get("duration")
        embed = (discord.Embed(title=f'{self.bot.get_emoji(settings["emojis"]["youtube"])} –ò–≥—Ä–∞–µ—Ç',
                               description=f"**{video.get('title')}**",
                               color=0xff2a2a)
                 .add_field(name='‚åõ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å', value=datetime.timedelta(seconds=duration))
                 .add_field(name='üôÉ –ó–∞–ø—Ä–æ—Å–∏–ª', value=context.author.mention)
                 .set_thumbnail(url=video.get('thumbnail')))
        await context.send(embed=embed, view=self.PlayerButtons(self.__vc,
                                                                context,
                                                                self.__leave,
                                                                self.__stop,
                                                                self.__pause,
                                                                self.__resume,
                                                                self.__skip))

        title = video.get('title')
        self.__queue.set_playing_now(title)

    def __skip(self, context):
        if self.__vc.is_playing():
            self.__vc.pause()
        if not self.__queue.is_empty():
            next_track = self.__queue.play_next()
            url = self.__get_url(next_track)
            asyncio.run_coroutine_threadsafe(self.__play(context, url, next_track), self.bot.loop)
        else:
            asyncio.run_coroutine_threadsafe(context.send("–°–ø–∏—Å–æ–∫ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –ø—É—Å—Ç.", delete_after=3),
                                             self.bot.loop)

    def __stop(self, context):
        self.__queue.clear()
        if self.__vc.is_playing():
            self.__vc.stop()
        elif self.__vc.is_paused():
            self.__vc.stop()

    def __leave(self, context):
        self.__pause(context)
        asyncio.run_coroutine_threadsafe(self.__vc.disconnect(), self.bot.loop)

    def __pause(self, context):
        if not self.__vc.is_paused():
            self.__vc.pause()

    def __resume(self, context):
        if not not self.__vc.is_playing():
            self.__vc.resume()
        elif self.__vc.is_playing():
            asyncio.run_coroutine_threadsafe(context.send("ü§™ –õ–æ–ª, —è –Ω–µ –Ω–∞ –ø–∞—É–∑–µ, "
                                                          "–∑–∞—á–µ–º —Ç—ã –≤–≤—ë–ª —ç—Ç—É –∫–æ–º–∞–Ω–¥—É?!"), self.bot.loop)

    @commands.command()
    async def play(self, ctx, *, arg):
        """–í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç –ø–µ—Å–Ω—é —Å YouTube, –∏–ª–∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –µ—ë –≤ —Å–ø–∏—Å–æ–∫, –µ—Å–ª–∏ —Å–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç –¥—Ä—É–≥–∞—è –ø–µ—Å–Ω—è"""
        await self.__connect(ctx)
        try:
            vid = self.__extract(arg)
        except IndexError:
            await ctx.send(":x: –¢—ã –¥–µ–±–∏–ª–∫–∞ —Ç—É–ø–∞—è! –ß–¢–û –ó–ê –ì–û–í–ù–û –¢–´ –í–´–°–†–ê–õ?! "
                           "–ö–ê–ö –Ø –ú–û–ì–£ –¢–ï–ë–ï –≠–¢–£ –•–ï–†–ï–°–¨ –ù–ê–ô–¢–ò?!!??!?!?!?1!!7!?!")
            await self.__vc.disconnect()
            return

        if not self.__vc.is_playing():
            url = self.__get_url(vid)
            await self.__play(ctx, url, vid)
        else:
            self.__queue.add_track(vid)
            await ctx.send(f"**{vid.get('title')}** –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫, –±–ª—è.")

    @commands.command()
    async def skip(self, ctx):
        """–ü—Ä–æ–ø—É—Å–∫–∞–µ—Ç —Ç–µ–∫—É—â—É—é –ø–µ—Å–Ω—é"""

        try:
            self.__skip(ctx)
            await ctx.send("‚è≠Ô∏è –°–∫–∏–ø–∞—é")
        except AttributeError:
            await ctx.message.add_reaction("ü§°")
            await ctx.send(f":face_with_symbols_over_mouth: –î–ê –¢–´ –ó–ê–ï–ë–ê–ê–ê–ê–õ! –°–æ—Ä—è–Ω—á–∏–∫. {ctx.author.mention}, "
                           f"–ö–∞–∫ —Ç—ã —Ö–æ—á–µ—à—å —Å–∫–∏–ø–Ω—É—Ç—å –º—É–∑–æ–Ω, –µ—Å–ª–∏ –Ø –ë–õ–Ø–î–¨ –ù–ï –ü–û–î–ö–õ–Æ–ß–Å–ù –ö –ì–û–õ–û–°–û–í–û–ú–£ –ß–ê–ê–¢–£! "
                           f"–ë–õ–Ø–Ø–Ø–Ø–Ø–Ø–Ø–Ø–Ø–Ø–Ø–Ø–Ø–Ø–Ø–Ø–Ø–Ø–Ø–Ø–Ø–Ø–Ø–Ø–Ø–Ø–Ø–Ø–Ø–Ø–Ø–Ø–Ø–Ø–Ø–Ø–Ø–Ø–Ø–Ø–Ø–Ø–Ø–Ø–Ø–Ø–Ø–Ø–î–¨!!")
            await ctx.send("–° —Ç–∞–∫–∏–º–∏ –¥–æ–¥–∏–∫–∞–º–∏, –∫–∞–∫ —Ç—ã, —è —Å—Ç–∞–ª–∫–∏–≤–∞—é—Å—å 24/7")

    @commands.command(name="queue")
    async def queue_embed(self, ctx):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Å–ª–µ–¥—É—é—â–∏—Ö –ø–µ—Å–µ–Ω"""

        now = self.__queue.get_playing_now()
        if now != None:
            embed = (discord.Embed(title="üìú –°–ø–∏—Å–æ–∫ –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è", color=0xf0cd4f))
            embed.add_field(name="‚ñ∂Ô∏è –°–µ–π—á–∞—Å –ò–≥—Ä–∞–µ—Ç", value=now, inline=False)
            for i in range(self.__queue.length()):
                video = self.__queue.get_by_id(i)
                embed.add_field(name=i + 1, value=video.get('title'), inline=False)
            await ctx.send(embed=embed)
        else:
            embed = (discord.Embed(title="üìú –°–ø–∏—Å–æ–∫ –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è",
                                   color=0xf0cd4f,
                                   description="–°–ø–∏—Å–æ–∫ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –ø—É—Å—Ç."))
            await ctx.send(embed=embed)

    @commands.command()
    async def leave(self, ctx):
        """–ö–∏–∫–∞–µ—Ç –±–æ—Ç–∞ –∏–∑ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —á–∞—Ç–∞"""

        try:
            self.__leave(ctx)
            await ctx.send('üö™ –ë–æ—Ç –≤—ã—à–µ–ª –∏–∑ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —á–∞—Ç–∞')
        except AttributeError:
            await ctx.message.add_reaction("ü§°")
            await ctx.send(f'{self.bot.get_emoji(settings["emojis"]["wuuut"])} –û–ø—è—Ç—å –Ω–∞—à—ë–ª—Å—è —É–º–Ω–∏–∫, '
                           f'–∫–æ—Ç–æ—Ä—ã–π –ø—ã—Ç–∞–µ—Ç—Å—è –æ–±—Ö–∏—Ç—Ä–∏—Ç—å —Å–∏—Å—Ç–µ–º—É, –∏ —Ö–æ—á–µ—Ç –≤—ã–≥–Ω–∞—Ç—å –±–æ—Ç–∞ –∏–∑ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —á–∞—Ç–∞, '
                           f'–∫–æ—Ç–æ—Ä—ã–π –¥–∞–∂–µ –∫ –Ω–µ–º—É –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω...')

    @commands.command()
    async def stop(self, ctx):
        """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ç–µ–∫—É—â—É—é –ø–µ—Å–Ω—é, –∏ –æ—á–∏—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–Ω–∏—è"""

        try:
            if self.__vc.is_playing():
                self.__stop(ctx)
                await ctx.send('üõë –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!')
            else:
                await ctx.message.add_reaction("ü§°")
                await ctx.send(f"–¢–´–ñ–î–£–ë–ò–ù–ê. –Ø –Ω–µ –º–æ–≥—É –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º—É–∑–æ–Ω, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. "
                               f"–§–µ–π—Å–ø–∞–ª–º –≤—Å–µ–π —Ç–æ–ª–ø–æ–π, —Ä–µ–±—è—Ç–∫–∏. –ù–∞–∫–∏–¥–∞–π—Ç–µ –µ–º—É —Ä–µ–∞–∫—Ü–∏–π –∫–ª–æ—É–Ω–∞")
        except AttributeError:
            await ctx.message.add_reaction("ü§°")
            await ctx.send(
                f'{self.bot.get_emoji(settings["emojis"]["wuuut"])} –¢–´–ñ–î–£–ë–ò–ù–ê. –Ø –Ω–µ –º–æ–≥—É –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º—É–∑–æ–Ω, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. '
                f'–§–µ–π—Å–ø–∞–ª–º –≤—Å–µ–π —Ç–æ–ª–ø–æ–π, —Ä–µ–±—è—Ç–∫–∏. –ù–∞–∫–∏–¥–∞–π—Ç–µ –µ–º—É —Ä–µ–∞–∫—Ü–∏–π –∫–ª–æ—É–Ω–∞')

    @commands.command()
    async def pause(self, ctx):
        """–°—Ç–∞–≤–∏—Ç –ø–µ—Å–Ω—é –Ω–∞ –ø–∞—É–∑—É"""

        try:
            if not self.__vc.is_paused():
                self.__pause(ctx)
                await ctx.send('üîá –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!')
            else:
                await ctx.message.add_reaction("ü§°")
                await ctx.send(f"ü§° –Ø –Ω–∞ –ø–∞—É–∑–µ, —É–ø—ã—Ä—å –∫–æ–Ω—á–µ–Ω–Ω—ã–π. –î–ª—è —ç—Ç–æ–≥–æ –µ—Å—Ç—å `{settings.get('prefix')}resume`")
        except AttributeError:
            await ctx.message.add_reaction("ü§°")
            await ctx.send(f'{self.bot.get_emoji(settings["emojis"]["wuuut"])} –¢—ã... —Ä–µ—à–∏–ª.. –ø–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–∞ –ø–∞—É–∑—É... '
                           f'–º—É–∑—ã–∫—É, –∫–æ—Ç–æ—Ä–∞—è –Ω–µ –∏–≥—Ä–∞–µ—Ç. –î–æ–ª–±–∞—ë–± –≤—Å—Ä–∞—Ç—ã–π...')

    @commands.command()
    async def resume(self, ctx):
        """–¢–æ –∂–µ —Å–∞–º–æ–µ, —á—Ç–æ –∏ –ø–∞—É–∑–∞, —Ç–æ–ª—å–∫–æ –Ω–∞–æ–±–æ—Ä–æ—Ç (—Ç—ã –ª–æ—Ö, –∏ –¥–æ–∫–∞–∂–∏ —á—Ç–æ –Ω–µ—Ç)"""

        try:
            if self.__vc.is_paused():
                self.__resume(ctx)
                await ctx.send('üéµ –ò–¥—ë—Ç –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ!')
            else:
                await ctx.message.add_reaction("ü§°")
                await ctx.send("–î–µ–±–∏–ª–∫–∞, —è –Ω–µ –Ω–∞ –ø–∞—É–∑–µ. –ß—Ç–æ —Ç—ã —Ç–∞–º –∏–≥—Ä–∞—Ç—å —Ö–æ—Ç–µ–ª? –¢—ã –∑–∞–¥–æ–ª–±–∞–ª–∞")
        except:
            await ctx.message.add_reaction("ü§°")
            await ctx.send(f"{self.bot.get_emoji(settings['emojis']['wuuut'])} –¢—ã –¥–∞—É–Ω–∞ —Å—ã–Ω, –¥–ª—è –Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏"
                           f"`{settings.get('prefix')}play [–Ω–∞–∑–≤–∞–Ω–∏–µ_–ø–µ—Å–Ω–∏]`")


async def setup(bot, intents):
    await bot.add_cog(Music(bot, intents))
