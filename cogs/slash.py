from config import settings

import discord
from discord import app_commands
from discord.ext import commands
from googletrans import Translator


class Slash(commands.Cog):
    """–û—Å–Ω–æ–≤–Ω—ã–µ —Å–ª—ç—à-–∫–æ–º–∞–Ω–¥—ã"""

    def __init__(self, bot):
        self.bot = bot

    @app_commands.command(name="echo", description="–í—ã–≤–æ–¥–∏—Ç —Ç–µ–∫—Å—Ç –æ—Ç –ª–∏—Ü–∞ –±–æ—Ç–∞")
    @app_commands.describe(message="–¢–≤–æ—ë —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ —è –Ω–∞–ø–∏—à—É –∑–∞ —Ç–µ–±—è")
    async def echo(self, interaction: discord.Interaction, message: str):
        await interaction.response.send_message(message)

    @app_commands.command(name="poll", description="–ì–ê–õ–ê–°–ê–í–ê–ù–ò–ï")
    @app_commands.describe(question="–ó–∞–¥–∞–π —Ç–µ–º—É –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è",
                           option1="–ü–µ—Ä–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)",
                           option2="–í—Ç–æ—Ä–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞",
                           option3="–¢—Ä–µ—Ç–∏–π –≤–∞—Ä–∏–∫",
                           option4="–ù—É —Ç—ã –ø–æ–Ω—è–ª –∫–æ—Ä–æ—á–µ")
    async def poll(self, interaction: discord.Interaction,
                   question: str, option1: str, option2: str = "None",
                   option3: str = "None", option4: str = "None", option5: str = "None",
                   option6: str = "None", option7: str = "None", option8: str = "None"):

        options_template = [option1, option2, option3,
                            option4, option5, option6,
                            option7, option8]

        options = []
        for opt in options_template:
            if opt != "None":
                options.append(opt)

        if len(options) < 1:
            await interaction.response.send_message('‚ùå –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è –Ω—É–∂–Ω–æ —Ö–æ—Ç—è-–±—ã 1 –æ—Ç–≤–µ—Ç!')
            return

        reactions_template = ['1‚É£', '2‚É£', '3‚É£', '4‚É£', '5‚É£', '6‚É£', '7‚É£', '8‚É£', '9‚É£', 'üîü']
        reactions = []
        for emoji in range(len(options)):
            reactions.append(reactions_template[emoji])

        description = []
        for x, option in enumerate(options):
            description += '\n{} {}'.format(reactions[x], option)

        embed = discord.Embed(color=0xffcd4c,
                              title=f'{self.bot.get_emoji(settings["emojis"]["stonks"])} {interaction.user}: {question}',
                              description=''.join(description))

        await interaction.response.send_message(embed=embed)
        react_message = await interaction.original_response()
        for reaction in reactions[:len(options)]:
            await react_message.add_reaction(reaction)

    @app_commands.command(name="translate", description="–ü–µ—Ä–µ–≤–æ–¥–∏—Ç —Ç–µ–∫—Å—Ç, –∏–±–æ —Ç—ã –¥–∞—É–Ω, "
                                                        "–Ω–µ –º–æ–∂–µ—à—å –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ —Å–∞–º")
    @app_commands.describe(language="–Ø–∑—ã–∫, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π —è –ø–µ—Ä–µ–≤–µ–¥—É —Ç–µ–∫—Å—Ç",
                           text="–¢–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π —è –ø–µ—Ä–µ–≤–µ–¥—É –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ç–æ–±–æ–π —è–∑—ã–∫",
                           is_embed="–ö–∞–∫ –≤—ã–≤–æ–¥–∏—Ç—å –ø–µ—Ä–µ–≤–æ–¥")
    @app_commands.choices(language=[
        app_commands.Choice(name="–ê–Ω–≥–ª–∏–π—Å–∫–∏–π", value="en"),
        app_commands.Choice(name="–ê—Ä–∞–±—Å–∫–∏–π", value="ar"),
        app_commands.Choice(name="–ê—Ñ—Ä–∏–∫–∞–Ω—Å–∫–∏–π", value="af"),
        app_commands.Choice(name="–ë–µ–ª–æ—Ä—É—Å—Å–∫–∏–π", value="be"),
        app_commands.Choice(name="–ë–æ–ª–≥–∞—Ä—Å–∫–∏–π", value="bg"),
        app_commands.Choice(name="–í–µ–Ω–≥–µ—Ä—Å–∫–∏–π", value="hu"),
        app_commands.Choice(name="–ì—Ä–µ—Ü–∫–∏–π", value="el"),
        app_commands.Choice(name="–ò–≤—Ä–∏—Ç", value="iw"),
        app_commands.Choice(name="–ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π", value="it"),
        app_commands.Choice(name="–ö–∏—Ç–∞–π—Å–∫–∏–π (—Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–π)", value="zh-tw"),
        app_commands.Choice(name="–õ–∞—Ç–∏–Ω—Å–∫–∏–π", value="la"),
        app_commands.Choice(name="–ù–µ–º–µ—Ü–∫–∏–π", value="de"),
        app_commands.Choice(name="–ü–æ–ª—å—Å–∫–∏–π", value="pl"),
        app_commands.Choice(name="–†—É—Å—Å–∫–∏–π", value="ru"),
        app_commands.Choice(name="–£–∫—Ä–∞–∏–Ω—Å–∫–∏–π", value="uk"),
        app_commands.Choice(name="–§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π", value="fr"),
        app_commands.Choice(name="–ß–µ—à—Å–∫–∏–π", value="cs"),
    ], is_embed=[
        app_commands.Choice(name="–í—ã–≤–µ—Å—Ç–∏ –≤ –≤–∏–¥–µ –≤–ª–æ–∂–µ–Ω–∏—è (–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é)", value=1),
        app_commands.Choice(name="–í—ã–≤–µ—Å—Ç–∏ –≤ –≤–∏–¥–µ –æ–±—ã—á–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞", value=0),
    ])
    async def translate(self, interaction: discord.Interaction,
                        language: app_commands.Choice[str], text: str,
                        is_embed: app_commands.Choice[int] = 1):  # Using "int" instead "bool", because second is not allowed
        translator = Translator()
        translation = translator.translate(text, dest=str(language.value))

        if is_embed == 1:
            embed = discord.Embed(color=0xffcd4c, title=f"{interaction.user} :: DebilBot Super Mega 228 Translator")
            embed.add_field(name="–ò—Å—Ö–æ–¥–Ω—ã–π –¢–µ–∫—Å—Ç", value=text, inline=False)
            embed.add_field(name=f"–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ {language.name}", value=translation.text, inline=False)
            await interaction.response.send_message(embed=embed)
        else:
            await interaction.response.send_message(translation.text)


async def setup(bot):
    await bot.add_cog(Slash(bot))
