from config import settings

import discord
from discord import app_commands
from discord.ext import commands
from googletrans import Translator


class Slash(commands.Cog):
    """–û—Å–Ω–æ–≤–Ω—ã–µ —Å–ª—ç—à-–∫–æ–º–∞–Ω–¥—ã"""

    def __init__(self, bot):
        self.bot = bot

    @app_commands.command(name="echo", description="–í—ã–≤–æ–¥–∏—Ç —Ç–µ–∫—Å—Ç –æ—Ç –ª–∏—Ü–∞ –±–æ—Ç–∞")
    @app_commands.describe(message="–¢–≤–æ—ë —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ —è –Ω–∞–ø–∏—à—É –∑–∞ —Ç–µ–±—è")
    async def echo(self, interaction: discord.Interaction, message: str):
        await interaction.response.send_message(message)

    @app_commands.command(name="poll", description="–ì–ê–õ–ê–°–ê–í–ê–ù–ò–ï")
    @app_commands.describe(question="–ó–∞–¥–∞–π —Ç–µ–º—É –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è",
                           option1="–ü–µ—Ä–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)",
                           option2="–í—Ç–æ—Ä–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞",
                           option3="–¢—Ä–µ—Ç–∏–π –≤–∞—Ä–∏–∫",
                           option4="–ù—É —Ç—ã –ø–æ–Ω—è–ª –∫–æ—Ä–æ—á–µ")
    async def poll(self, interaction: discord.Interaction,
                   question: str, option1: str, option2: str=None,
                   option3: str="None", option4: str="None", option5: str="None",
                   option6: str="None", option7: str="None", option8: str="None"):

        options_template = [option1, option2, option3,
                            option4, option5, option6,
                            option7, option8]

        options = []
        for opt in options_template:
            if opt is not "None":
                options.append(opt)

        if len(options) < 1:
            await interaction.response.send_message('‚ùå –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è –Ω—É–∂–Ω–æ —Ö–æ—Ç—è-–±—ã 1 –æ—Ç–≤–µ—Ç!')
            return

        reactions_template = ['1‚É£', '2‚É£', '3‚É£', '4‚É£', '5‚É£', '6‚É£', '7‚É£', '8‚É£', '9‚É£', 'üîü']
        reactions = []
        for emoji in range(len(options)):
            reactions.append(reactions_template[emoji])

        description = []
        for x, option in enumerate(options):
            description += '\n{} {}'.format(reactions[x], option)

        embed = discord.Embed(color=0xffcd4c,
                              title=f'{self.bot.get_emoji(settings["emojis"]["stonks"])} {interaction.user}: {question}',
                              description=''.join(description))

        await interaction.response.send_message(embed=embed)
        react_message = await interaction.original_response()
        for reaction in reactions[:len(options)]:
            await react_message.add_reaction(reaction)


async def setup(bot):
    await bot.add_cog(Slash(bot))
